/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Footer = {
  _id: string;
  _type: 'footer';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  blockText?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  footerImage?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  links?: Array<{
    title?: string;
    url?: string;
    _key: string;
  }>;
};

export type Podcast = {
  _id: string;
  _type: 'podcast';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  host?: string;
  picture?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  department?: 'news' | 'sports';
  spotifyEpisodeURLs?: Array<string>;
};

export type Article = {
  _id: string;
  _type: 'article';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  author?: string;
  date?: string;
  picture?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  articleType?: 'music' | 'news' | 'sports';
  priority?: number;
};

export type Slug = {
  _type: 'slug';
  current?: string;
  source?: string;
};

export type VideoCard = {
  _id: string;
  _type: 'videoCard';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  videoLink?: string;
};

export type Announcement = {
  _id: string;
  _type: 'announcement';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  subtitle?: string;
  announcementImage?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  link?: string;
};

export type ManagementCard = {
  _id: string;
  _type: 'managementCard';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  role?: string;
  email?: string;
  priority?: number;
  picture?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
};

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type TextBlock = {
  _id: string;
  _type: 'textBlock';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | Footer
  | Podcast
  | Article
  | Slug
  | VideoCard
  | Announcement
  | ManagementCard
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | TextBlock;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: MANAGEMENT_CARDS_QUERY
// Query: *[_type=="managementCard"]|order(priority asc){'id':_id,name,role,email,picture}
export type MANAGEMENT_CARDS_QUERYResult = Array<{
  id: string;
  name: string | null;
  role: string | null;
  email: string | null;
  picture: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
}>;
// Variable: MANAGEMENT_CARD_QUERY
// Query: *[_type=="managementCard"][0]{'id':_id,name,role,email,picture}
export type MANAGEMENT_CARD_QUERYResult = {
  id: string;
  name: string | null;
  role: string | null;
  email: string | null;
  picture: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
} | null;
// Variable: ABOUT_TEXT_QUERY
// Query: *[_type=="textBlock" && name=="About"][0]{content}
export type ABOUT_TEXT_QUERYResult = {
  content: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }> | null;
} | null;
// Variable: ANNOUNCEMENTS_QUERY
// Query: *[_type=="announcement"]|order(_createdAt desc){title,subtitle,announcementImage,link}
export type ANNOUNCEMENTS_QUERYResult = Array<{
  title: string | null;
  subtitle: string | null;
  announcementImage: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
  link: string | null;
}>;
// Variable: ANNOUNCEMENT_QUERY
// Query: *[_type=="announcement"][0]{title,subtitle,announcementImage,link}
export type ANNOUNCEMENT_QUERYResult = {
  title: string | null;
  subtitle: string | null;
  announcementImage: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
  link: string | null;
} | null;
// Variable: VIDEO_CARDS_QUERY
// Query: *[_type=="videoCard"]|order(_createdAt desc){name,videoLink}
export type VIDEO_CARDS_QUERYResult = Array<{
  name: string | null;
  videoLink: string | null;
}>;
// Variable: VIDEO_CARD_QUERY
// Query: *[_type=="videoCard"][0]{name,videoLink}
export type VIDEO_CARD_QUERYResult = {
  name: string | null;
  videoLink: string | null;
} | null;
// Variable: ARTICLES_QUERY
// Query: *[_type == "article"]  | order(_createdAt desc) | order(priority asc){    'id': _id,    name,    slug,    author,    date,    picture,    content,    articleType  }
export type ARTICLES_QUERYResult = Array<{
  id: string;
  name: string | null;
  slug: Slug | null;
  author: string | null;
  date: string | null;
  picture: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
  content: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }> | null;
  articleType: 'music' | 'news' | 'sports' | null;
}>;
// Variable: ARTICLE_QUERY
// Query: *[_type == "article"][0]{    'id': _id,    name,    slug,    author,    date,    picture,    content,    articleType  }
export type ARTICLE_QUERYResult = {
  id: string;
  name: string | null;
  slug: Slug | null;
  author: string | null;
  date: string | null;
  picture: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
  content: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }> | null;
  articleType: 'music' | 'news' | 'sports' | null;
} | null;
// Variable: PODCASTS_QUERY
// Query: *[_type == "podcast"]| order(_createdAt desc){    'id': _id,    name,    slug,    host,    picture,    spotifyEpisodeURLs,    department,    description  }
export type PODCASTS_QUERYResult = Array<{
  id: string;
  name: string | null;
  slug: Slug | null;
  host: string | null;
  picture: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
  spotifyEpisodeURLs: Array<string> | null;
  department: 'news' | 'sports' | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }> | null;
}>;
// Variable: PODCAST_QUERY
// Query: *[_type == "podcast"][0]{    'id': _id,    name,    slug,    host,    picture,    spotifyEpisodeURLs,    department,    description  }
export type PODCAST_QUERYResult = {
  id: string;
  name: string | null;
  slug: Slug | null;
  host: string | null;
  picture: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
  spotifyEpisodeURLs: Array<string> | null;
  department: 'news' | 'sports' | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }> | null;
} | null;
// Variable: FOOTER_QUERY
// Query: *[_type == "footer"][0]{    'id': _id,    blockText,    footerImage,    links  }
export type FOOTER_QUERYResult = {
  id: string;
  blockText: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }> | null;
  footerImage: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  } | null;
  links: Array<{
    title?: string;
    url?: string;
    _key: string;
  }> | null;
} | null;

// Query TypeMap
import '@sanity/client';
declare module '@sanity/client' {
  interface SanityQueries {
    '*[_type=="managementCard"]|order(priority asc){\'id\':_id,name,role,email,picture}': MANAGEMENT_CARDS_QUERYResult;
    '*[_type=="managementCard"][0]{\'id\':_id,name,role,email,picture}': MANAGEMENT_CARD_QUERYResult;
    '*[_type=="textBlock" && name=="About"][0]{content}': ABOUT_TEXT_QUERYResult;
    '*[_type=="announcement"]|order(_createdAt desc){title,subtitle,announcementImage,link}': ANNOUNCEMENTS_QUERYResult;
    '*[_type=="announcement"][0]{title,subtitle,announcementImage,link}': ANNOUNCEMENT_QUERYResult;
    '*[_type=="videoCard"]|order(_createdAt desc){name,videoLink}': VIDEO_CARDS_QUERYResult;
    '*[_type=="videoCard"][0]{name,videoLink}': VIDEO_CARD_QUERYResult;
    '\n  *[_type == "article"]\n  | order(_createdAt desc) | order(priority asc){\n    \'id\': _id,\n    name,\n    slug,\n    author,\n    date,\n    picture,\n    content,\n    articleType\n  }\n': ARTICLES_QUERYResult;
    '\n  *[_type == "article"][0]{\n    \'id\': _id,\n    name,\n    slug,\n    author,\n    date,\n    picture,\n    content,\n    articleType\n  }\n': ARTICLE_QUERYResult;
    '\n  *[_type == "podcast"]| order(_createdAt desc){\n    \'id\': _id,\n    name,\n    slug,\n    host,\n    picture,\n    spotifyEpisodeURLs,\n    department,\n    description\n  }\n': PODCASTS_QUERYResult;
    '\n  *[_type == "podcast"][0]{\n    \'id\': _id,\n    name,\n    slug,\n    host,\n    picture,\n    spotifyEpisodeURLs,\n    department,\n    description\n  }\n': PODCAST_QUERYResult;
    '\n  *[_type == "footer"][0]{\n    \'id\': _id,\n    blockText,\n    footerImage,\n    links\n  }\n': FOOTER_QUERYResult;
  }
}
